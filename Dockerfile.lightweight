# Ultra-lightweight Dockerfile for CPU-only local deployment
# Aggressively optimized to avoid CUDA and heavy ML dependencies

FROM python:3.11-slim

# Set environment variables early to avoid ML package auto-installation
ENV PIP_NO_DEPS_FOR_TORCH=1
ENV PYTORCH_DISABLE_CUDA=1
ENV CUDA_VISIBLE_DEVICES=""
ENV CRAWL4AI_DISABLE_SENTENCE_TRANSFORMERS=true
ENV CRAWL4AI_DISABLE_TORCH=true

# Install only essential system dependencies
RUN apt-get update && apt-get install -y \
    # Playwright essentials only
    libnss3 \
    libnspr4 \
    libasound2 \
    libatk-bridge2.0-0 \
    libdrm2 \
    libgtk-3-0 \
    libgbm1 \
    # Basic utilities
    curl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN groupadd --gid 1000 mcpuser && \
    useradd --uid 1000 --gid mcpuser --shell /bin/bash --create-home mcpuser

# Set working directory
WORKDIR /app

# Copy requirements and install in stages to avoid heavy dependencies
COPY requirements-cpu.txt .

# Install packages with explicit CPU-only specifications
RUN pip install --no-cache-dir \
    # Force CPU-only PyTorch if needed (lightweight)
    torch --index-url https://download.pytorch.org/whl/cpu \
    # Install other requirements
    && pip install --no-cache-dir -r requirements-cpu.txt \
    # Install crawl4ai with minimal dependencies
    && pip install --no-cache-dir --no-deps crawl4ai>=0.3.0

# Copy application code
COPY . .

# Install only Chromium browser (lightest option)
RUN playwright install chromium

# Change ownership to non-root user
RUN chown -R mcpuser:mcpuser /app

# Switch to non-root user
USER mcpuser

# Set runtime environment
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV FASTMCP_LOG_LEVEL=INFO

# Lightweight health check
HEALTHCHECK --interval=60s --timeout=5s --start-period=30s --retries=2 \
    CMD python -c "import sys; sys.exit(0)" || exit 1

# Default command
CMD ["python", "-m", "crawl4ai_mcp.server"]